uip_ip6addr_t node_addr;  //16 байт
   uip_ip6addr_copy(&node_addr, sender_addr);
   
Заводской номер: 29 037622 (addr: 00  00  92  F6)
PACK into device :   00  00  92  F6  2F  83  91
Addr: 00 00 92 F6 CMD: 2F CRC16: 8391
0x00 0x00 0x92 0xF6 0x2F 0x83 0x91

CRC-16/MODBUS	0x9183	0x4B37	0x8005	0xFFFF	true	true	0x0000
CRC-16/ARC		0x91A7	0xBB3D	0x8005	0x0000	true	true	0x0000


	for(uint8_t i = 0; i < udup_v5_data_iterator; i++) /*Копирование из буфера приема UART*/
		udp_buffer[i+8] = udup_v5_rc_uart_rx_buffer[i];

udup_v5_rc_uart_rx_buffer[udup_v5_data_iterator] // udup_v5_data_iterator = 7

udup_v5_rc_uart_rx_buffer[0] // Addr: 0x00
udup_v5_rc_uart_rx_buffer[1] // Addr: 0x00
udup_v5_rc_uart_rx_buffer[2] // Addr: 0x92
udup_v5_rc_uart_rx_buffer[3] // Addr: 0xF6
udup_v5_rc_uart_rx_buffer[4] // Addr: 0x2F
udup_v5_rc_uart_rx_buffer[udup_v5_data_iterator-2] // Addr: 0x83
udup_v5_rc_uart_rx_buffer[udup_v5_data_iterator-1] // Addr: 0x91


u8_u16_t crc16_calculated;

   /* Считаем контрольную сумму */
   crc16_calculated.u16 = crc16_arc(udup_v5_rc_uart_tx_buffer, UDUP_V5_CR_PAYLOAD_OFFSET + payload_length.u16);
   udup_v5_cr_uart_tx_buffer[UDUP_V5_CR_PAYLOAD_OFFSET + payload_length.u16+0] = crc16_calculated.u8[1]; //Меняем порядок байт на MSB-First
   udup_v5_cr_uart_tx_buffer[UDUP_V5_CR_PAYLOAD_OFFSET + payload_length.u16+1] = crc16_calculated.u8[0];


static struct ctimer wait_response;

static void wait_response_reset(void *ptr)
{
   wait_response_slave = 0;
}














